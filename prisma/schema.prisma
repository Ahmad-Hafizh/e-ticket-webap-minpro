// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


// user schema
model User{
  user_id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  pfp_url String?
  created_at DateTime @default(now())
  profile Profile?
  isVerified Boolean @default(false)
  referred_id Int?
  referral Referral?
  referred Referral? @relation(fields: [referred_id], references: [referral_id], name: "referred_user")
  points Point[]
  coupons Coupon[]


  @@map("users")
}

model Profile {
  profile_id Int @id @default(autoincrement())
  phone String?
  role Role @default(user)
  job_title String?
  company String?
  addresses Address[]
  social_medias Social_media[]
  user_id Int @unique
  user User @relation(fields: [user_id], references: [user_id])

  @@map("profile")
}

model Address{
  address_id Int @id @default(autoincrement())
  profile Profile @relation(fields: [profile_id],references: [profile_id])
  profile_id Int
  address_name AddressName
  address String
  city String
  country String
  zipcode String?

  @@map("address")
}

model Point{
  point_id Int @id @default(autoincrement())
  user User @relation(fields: [user_id], references: [user_id])
  user_id Int
  amount Int
  added_date DateTime @default(now())
  expired_date DateTime 

  @@map("points")
}

model Referral{
  referral_id Int @id @default(autoincrement())
  referral_code String @unique
  user_id Int @unique
  user User @relation(fields: [user_id], references: [user_id])
  referred_users User[] @relation(name: "referred_user") 

  @@map("referral")
}

model Social_media{
  social_id Int @id @default(autoincrement())
  profile Profile @relation(fields: [profile_id], references: [profile_id])
  profile_id Int
  platform Platform
  account_name String
  url String

  @@map("social_media")
}

model Coupon{
  coupon_id Int @id @default(autoincrement())
  coupon_name String
  user_id Int
  user User @relation(fields: [user_id],references: [user_id])
  coupon_code String
  discount Int
  max_amount Int?
  start_date DateTime @default(now())
  expired_date DateTime

  @@map("coupons")
}

model Event{
  event_id Int @id @default(autoincrement())
  user_id Int
  description String
  category_id Int
  coupon_id Int
  createdAt DateTime
  updatedAt DateTime
}

model Event_category{
  event_cateogry_id Int @id @default(autoincrement())
  category_name String @unique
}

enum Role {
  user
  organizer
}

enum AddressName {
home
shipping
work
}

enum Platform {
  instagram
  twitter
  linkedIn
  whatsapp
  line
  behance
}